<configuration scanPeriod="60 seconds">
    <!-- 1.logback首先会试着查找logback.groovy文件; -->
    <!-- 2.当没有找到时，继续试着查找logback-test.py.xml文件; -->
    <!-- 3.当没有找到时，继续试着查找logback.xml文件; -->
    <!-- 4.如果仍然没有找到，则使用默认配置（打印到控制台） -->

    <timestamp key="bySecond" datePattern="yyyy-MM-dd HH:mm:ss"/>
    <property file="project.properties"/>
    <property name="project.app.name" value="erp"/>
    <!-- This is used so we can get SEVERE messages logged from 3rd party packages
        (guava, jsoup) into zeus.log -->
    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</Pattern>
        </layout>
    </appender>

    <appender name="MAIN"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${user.home}/logs/${project.app.name}/${spring.profiles.default}/${project.app.name}.%d.log.gz</FileNamePattern>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>%date %-5level [%13.13thread] %30.30logger{30} [%file:%line]
                >>> %msg%n
            </pattern>
        </encoder>
    </appender>


    <logger name="com" level="debug"/>
    <logger name="com.stosz" level="trace"/>
    <logger name="org" level="info"/>


    <!--线上或者预发布-->
    <!--<logger name="com.stosz" level="" />-->
    <!--<logger name="com.stosz.productoduct.mapper" level="info" />-->

    <root level="trace">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="MAIN" />
    </root>

</configuration>
